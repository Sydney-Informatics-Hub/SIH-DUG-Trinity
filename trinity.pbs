#! /bin/bash
#rj name=runWoy queue=sihtri mem=119G features=centos7 runtime=48 

#########################################################
# 
# Platform: DUG McCloud
# Description: 
#	Trinity de novo transcriptome assembly
# Trinity user guide and references: 
# 	https://github.com/trinityrnaseq/trinityrnaseq/wiki
# Details:
#	This PBS script runs trinity de novo transcriptome
# 	assembly on University of Queensland's Flashlite HPC.
# Usage: 
#	Edit the script replacing everything in <> with your
#	inputs and options. Edit compute resource requests 
# 	at the #PBS directives and the mem variable (if required). 
#	See "Compute Resources" for guidance.
#   Submit with: rjs trinity.pbs
# Singularity containers:
#	https://data.broadinstitute.org/Trinity/TRINITY_SINGULARITY/
# Compute resources: 
#	For single sample assemblies, use:
#	select=1:ncpus=24:mem=250gb
#	mem='250G'
#	For global assemblies, use staged scripts for more efficient
#	utilization of resources. Or:
# 	select=1:ncpus=24:mem=500gb
# 	mem='500G'
#
# If you use this script towards a publication, please acknowledge the
# Sydney Informatics Hub (or co-authorship, where appropriate).
#
# Suggested acknowledgement:
# The authors acknowledge the scientific and technical assistance 
# <or e.g. bioinformatics assistance of > of Sydney Informatics Hub
# 
#########################################################

#Stop script if it encounters an error.
set -e

module add singularity/3.5.1

#Set mem and 
mem='120G'
NCPUS=272

## SET VARIABLES: REPLACE 

#Set home folders needed by dug and singularity
myhome=/d/home/sihtri/sihtri_nathanielb/
dughome=/d/sw/Modules/3.2.7/init/

#Tissue sample name of fastq files
sample=8625

#The top level dir of where scripts, input data, and output data should go.
inpath=/p9/mcc_sihtri/nat

#Singularity Image name
simg=${inpath}/trinity.img

# Grab trinity version for austerity
ver=`echo ${simg} | perl -pe 's/^.*trinityrnaseq\.(v.*)\.simg/$1/g'`
#Set output path
sampleout=Woylie_${sample}_trinity_${ver}
outpath=${inpath}/${sampleout}

#Name of data inputs
first=${inpath}/Woylie/Woylie_8625_S1_R1_trimmed_P.fastq.gz
#,${inpath}/Woylie/woylie_heart_S6_R1_trimmed_P.fastq.gz,${inpath}/Woylie/woylie_pskin_S1_R1_trimmed_P.fastq.gz,${inpath}/Woylie/woylie_tongue_S2_R1_trimmed_P.fastq.gz
second=${inpath}/Woylie/Woylie_8625_S1_R2_trimmed_P.fastq.gz
#,${inpath}/Woylie/woylie_heart_S6_R2_trimmed_P.fastq.gz,${inpath}/Woylie/woylie_pskin_S1_R2_trimmed_P.fastq.gz,${inpath}/Woylie/woylie_tongue_S2_R2_trimmed_P.fastq.gz


# Create output directory (all data here)
export TRINITY_OUTDIR=${outpath}/trinity_outdir
mkdir -p ${TRINITY_OUTDIR}

echo "Testing Singularity..."
#singularity exec -B ${out} -B ${in} trinity.img env 
singularity exec -B ${dughome} -B ${myhome} -B ${inpath} ${simg} pwd

## RUN TRINITY 
echo "Running Trinity..."
singularity exec -B ${dughome} -B ${myhome} -B ${in} ${simg} Trinity \
		--seqType fq \
                --max_memory ${mem} \
                --left ${first} \
                --right ${second} \
                --CPU ${NCPUS} \
                --output ${TRINITY_OUTDIR} \
				--no_normalize_reads \
                --verbose

echo "$(date): Finished trinity"
